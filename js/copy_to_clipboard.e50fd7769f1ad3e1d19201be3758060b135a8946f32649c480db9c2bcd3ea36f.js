/**
 * Add a 'Copy to clipboard' icon to all code snippets
 *
 * They have a bootstrap tooltip on hover and get a green checkmark, if copied.
 */
if (navigator.clipboard) {
    document.querySelectorAll("pre").forEach((block) => {
        const copyIcon = '<i class="bi bi-clipboard"></i>';

        let button = document.createElement("button")

        // Position the button above the top right corner
        block.parentElement.classList.add("position-relative");
        button.classList.add("position-absolute", "top-0", "start-100", "btn", "btn-dark", "opacity-50", "translate-middle");

        // Add the bootstrap tooltip
        button.setAttribute("data-bs-toggle", "tooltip");
        button.setAttribute("data-bs-title", "Copy to clipboard");

        // Set the button contents to a clipboard icon
        button.innerHTML = copyIcon;

        button.addEventListener("click", async (event) => {
            let button = event.target;
            let pre = button.parentElement;
            // Sometimes firefox does not recognize the parent, so parentElement needs to be called again.
            if (pre.tagName === "BUTTON") {
                pre = pre.parentElement;
            }

            let code = pre.querySelector("code");

            // Filter out unnecessary '<span>' tags generated by hugo.
            let text = code.innerHTML;
            text = text.replaceAll(/<\/?span[ a-zA-z=":;#\d]*>/g, "");

            await navigator.clipboard.writeText(text);

            // not recognizing goes for the icon:
            if (button.tagName === "I") {
                button.parentElement.innerHTML = '<i class="bi bi-clipboard-check-fill" style="color: greenyellow"></i>';
            } else {
                button.innerHTML = '<i class="bi bi-clipboard-check-fill" style="color: greenyellow"></i>';
            }
        });
        block.parentElement.appendChild(button);
    });
}

// Register the new tooltips with bootstrap
const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
